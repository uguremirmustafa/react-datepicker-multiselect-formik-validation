{"ast":null,"code":"var _jsxFileName = \"/home/anomy/Development/mastering-formik/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email().required(),\n  date: yup.array(date())\n});\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      date: []\n    },\n    validationSchema: schema,\n    onSubmit: values => console.log(values)\n  });\n  const [selectedSpecificDays, setSelectedSpecificDays] = useState([]);\n  console.log(selectedSpecificDays);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...formik.getFieldProps('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), formik.errors.email && formik.touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        onChange: date => {\n          const dateStr = new Date(date).toDateString();\n\n          if (selectedSpecificDays.includes(dateStr)) {\n            setSelectedSpecificDays(oldDays => {\n              const newDays = oldDays.filter(day => day !== dateStr);\n              return newDays;\n            });\n          } else {\n            setSelectedSpecificDays(oldDays => {\n              const newDays = [...oldDays, dateStr];\n              return newDays;\n            });\n          }\n\n          formik.setFieldValue('date', selectedSpecificDays);\n        } // selected={formik.values.date}\n        ,\n        inline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        disabled: !formik.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YLGBgvP5tx58cYslvb4qmpIVLGk=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/anomy/Development/mastering-formik/src/App.tsx"],"names":["useFormik","React","useState","DatePicker","yup","schema","object","email","string","required","date","array","App","formik","initialValues","validationSchema","onSubmit","values","console","log","selectedSpecificDays","setSelectedSpecificDays","handleSubmit","getFieldProps","errors","touched","dateStr","Date","toDateString","includes","oldDays","newDays","filter","day","setFieldValue","isValid"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,WAAP;AACA,OAAO,4CAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACxBC,EAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EADiB;AAExBC,EAAAA,IAAI,EAAEN,GAAG,CAACO,KAAJ,CAAUD,IAAI,EAAd;AAFkB,CAAX,CAAf;;AAKA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGb,SAAS,CAAC;AACvBc,IAAAA,aAAa,EAAE;AACbP,MAAAA,KAAK,EAAE,EADM;AAEbG,MAAAA,IAAI,EAAE;AAFO,KADQ;AAKvBK,IAAAA,gBAAgB,EAAEV,MALK;AAMvBW,IAAAA,QAAQ,EAAGC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AANC,GAAD,CAAxB;AAQA,QAAM,CAACG,oBAAD,EAAuBC,uBAAvB,IAAkDnB,QAAQ,CAAW,EAAX,CAAhE;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYC,oBAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEP,MAAM,CAACS,YAAvB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBT,MAAM,CAACU,aAAP,CAAqB,OAArB;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGV,MAAM,CAACW,MAAP,CAAcjB,KAAd,IAAuBM,MAAM,CAACY,OAAP,CAAelB,KAAtC,iBAA+C;AAAA,kBAAOM,MAAM,CAACW,MAAP,CAAcjB;AAArB;AAAA;AAAA;AAAA;AAAA,cAFlD,eAGE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAGG,IAAD,IAAiB;AACzB,gBAAMgB,OAAO,GAAG,IAAIC,IAAJ,CAASjB,IAAT,EAAekB,YAAf,EAAhB;;AACA,cAAIR,oBAAoB,CAACS,QAArB,CAA8BH,OAA9B,CAAJ,EAA4C;AAC1CL,YAAAA,uBAAuB,CAAES,OAAD,IAAa;AACnC,oBAAMC,OAAO,GAAGD,OAAO,CAACE,MAAR,CAAgBC,GAAD,IAASA,GAAG,KAAKP,OAAhC,CAAhB;AACA,qBAAOK,OAAP;AACD,aAHsB,CAAvB;AAID,WALD,MAKO;AACLV,YAAAA,uBAAuB,CAAES,OAAD,IAAa;AACnC,oBAAMC,OAAO,GAAG,CAAC,GAAGD,OAAJ,EAAaJ,OAAb,CAAhB;AACA,qBAAOK,OAAP;AACD,aAHsB,CAAvB;AAID;;AACDlB,UAAAA,MAAM,CAACqB,aAAP,CAAqB,MAArB,EAA6Bd,oBAA7B;AACD,SAfH,CAgBE;AAhBF;AAiBE,QAAA,MAAM;AAjBR;AAAA;AAAA;AAAA;AAAA,cAHF,eAwBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,QAAQ,EAAE,CAACP,MAAM,CAACsB;AAAtD;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA1CQvB,G;UACQZ,S;;;KADRY,G;AA4CT,eAAeA,GAAf","sourcesContent":["import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport * as yup from 'yup';\n\nconst schema = yup.object({\n  email: yup.string().email().required(),\n  date: yup.array(date()),\n});\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      date: [],\n    },\n    validationSchema: schema,\n    onSubmit: (values) => console.log(values),\n  });\n  const [selectedSpecificDays, setSelectedSpecificDays] = useState<string[]>([]);\n  console.log(selectedSpecificDays);\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={formik.handleSubmit}>\n        <input type=\"text\" {...formik.getFieldProps('email')} />\n        {formik.errors.email && formik.touched.email && <span>{formik.errors.email}</span>}\n        <DatePicker\n          onChange={(date: never) => {\n            const dateStr = new Date(date).toDateString();\n            if (selectedSpecificDays.includes(dateStr)) {\n              setSelectedSpecificDays((oldDays) => {\n                const newDays = oldDays.filter((day) => day !== dateStr);\n                return newDays;\n              });\n            } else {\n              setSelectedSpecificDays((oldDays) => {\n                const newDays = [...oldDays, dateStr];\n                return newDays;\n              });\n            }\n            formik.setFieldValue('date', selectedSpecificDays);\n          }}\n          // selected={formik.values.date}\n          inline\n        />\n        {/* {formik.errors.date && formik.touched.date && <span>{formik.errors.date}</span>} */}\n\n        <input type=\"submit\" value=\"submit\" disabled={!formik.isValid} />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}