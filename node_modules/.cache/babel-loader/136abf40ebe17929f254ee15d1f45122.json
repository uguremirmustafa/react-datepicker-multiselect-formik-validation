{"ast":null,"code":"var _jsxFileName = \"/home/anomy/Development/mastering-formik/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email().required(),\n  date: yup.date().min(new Date('2022-10-10'), 'worng date').required('date is required')\n});\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '' // date: null,\n\n    },\n    validationSchema: schema,\n    onSubmit: values => console.log(values)\n  });\n  const [selectedSpecificDays, setSelectedSpecificDays] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...formik.getFieldProps('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), formik.errors.email && formik.touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        onChange: date => {} // selected={formik.values.date}\n        ,\n        inline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        disabled: !formik.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YLGBgvP5tx58cYslvb4qmpIVLGk=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/anomy/Development/mastering-formik/src/App.tsx"],"names":["useFormik","React","useState","DatePicker","yup","schema","object","email","string","required","date","min","Date","App","formik","initialValues","validationSchema","onSubmit","values","console","log","selectedSpecificDays","setSelectedSpecificDays","handleSubmit","getFieldProps","errors","touched","isValid"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,WAAP;AACA,OAAO,4CAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACxBC,EAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,EADiB;AAExBC,EAAAA,IAAI,EAAEN,GAAG,CAACM,IAAJ,GAAWC,GAAX,CAAe,IAAIC,IAAJ,CAAS,YAAT,CAAf,EAAuC,YAAvC,EAAqDH,QAArD,CAA8D,kBAA9D;AAFkB,CAAX,CAAf;;AAKA,SAASI,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGd,SAAS,CAAC;AACvBe,IAAAA,aAAa,EAAE;AACbR,MAAAA,KAAK,EAAE,EADM,CAEb;;AAFa,KADQ;AAKvBS,IAAAA,gBAAgB,EAAEX,MALK;AAMvBY,IAAAA,QAAQ,EAAGC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AANC,GAAD,CAAxB;AAQA,QAAM,CAACG,oBAAD,EAAuBC,uBAAvB,IAAkDpB,QAAQ,CAAC,EAAD,CAAhE;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEY,MAAM,CAACS,YAAvB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBT,MAAM,CAACU,aAAP,CAAqB,OAArB;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGV,MAAM,CAACW,MAAP,CAAclB,KAAd,IAAuBO,MAAM,CAACY,OAAP,CAAenB,KAAtC,iBAA+C;AAAA,kBAAOO,MAAM,CAACW,MAAP,CAAclB;AAArB;AAAA;AAAA;AAAA;AAAA,cAFlD,eAGE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAGG,IAAD,IAAe,CAAE,CAD7B,CAEE;AAFF;AAGE,QAAA,MAAM;AAHR;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,QAAQ,EAAE,CAACI,MAAM,CAACa;AAAtD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA1BQd,G;UACQb,S;;;KADRa,G;AA4BT,eAAeA,GAAf","sourcesContent":["import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport * as yup from 'yup';\n\nconst schema = yup.object({\n  email: yup.string().email().required(),\n  date: yup.date().min(new Date('2022-10-10'), 'worng date').required('date is required'),\n});\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      // date: null,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => console.log(values),\n  });\n  const [selectedSpecificDays, setSelectedSpecificDays] = useState([]);\n  return (\n    <div className=\"App\">\n      <form onSubmit={formik.handleSubmit}>\n        <input type=\"text\" {...formik.getFieldProps('email')} />\n        {formik.errors.email && formik.touched.email && <span>{formik.errors.email}</span>}\n        <DatePicker\n          onChange={(date: any) => {}}\n          // selected={formik.values.date}\n          inline\n        />\n        {/* {formik.errors.date && formik.touched.date && <span>{formik.errors.date}</span>} */}\n\n        <input type=\"submit\" value=\"submit\" disabled={!formik.isValid} />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}