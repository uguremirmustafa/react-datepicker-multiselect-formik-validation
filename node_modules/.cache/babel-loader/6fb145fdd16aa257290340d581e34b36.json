{"ast":null,"code":"var _jsxFileName = \"/home/anomy/Development/mastering-formik/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email().required()\n});\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      date: null\n    },\n    validationSchema: schema,\n    onSubmit: values => console.log(values)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...formik.getFieldProps('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        onChange: date => formik.setFieldValue('date', date),\n        selected: formik.values.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), formik.errors && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/anomy/Development/mastering-formik/src/App.tsx"],"names":["useFormik","React","DatePicker","yup","schema","object","email","string","required","App","formik","initialValues","date","validationSchema","onSubmit","values","console","log","handleSubmit","getFieldProps","setFieldValue","errors"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,WAAP;AACA,OAAO,4CAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACxBC,EAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GAAaD,KAAb,GAAqBE,QAArB;AADiB,CAAX,CAAf;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGV,SAAS,CAAC;AACvBW,IAAAA,aAAa,EAAE;AACbL,MAAAA,KAAK,EAAE,EADM;AAEbM,MAAAA,IAAI,EAAE;AAFO,KADQ;AAKvBC,IAAAA,gBAAgB,EAAET,MALK;AAMvBU,IAAAA,QAAQ,EAAGC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AANC,GAAD,CAAxB;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEL,MAAM,CAACQ,YAAvB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBR,MAAM,CAACS,aAAP,CAAqB,OAArB;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAGP,IAAD,IAAeF,MAAM,CAACU,aAAP,CAAqB,MAArB,EAA6BR,IAA7B,CAD3B;AAEE,QAAA,QAAQ,EAAEF,MAAM,CAACK,MAAP,CAAcH;AAF1B;AAAA;AAAA;AAAA;AAAA,cAFF,EAMGF,MAAM,CAACW,MAAP,iBAAiB;AAAA,kBAAOA,MAAM,CAACf;AAAd;AAAA;AAAA;AAAA;AAAA,cANpB,eAOE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvBQG,G;UACQT,S;;;KADRS,G;AAyBT,eAAeA,GAAf","sourcesContent":["import { useFormik } from 'formik';\nimport React from 'react';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport * as yup from 'yup';\n\nconst schema = yup.object({\n  email: yup.string().email().required(),\n});\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      date: null,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => console.log(values),\n  });\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={formik.handleSubmit}>\n        <input type=\"text\" {...formik.getFieldProps('email')} />\n        <DatePicker\n          onChange={(date: any) => formik.setFieldValue('date', date)}\n          selected={formik.values.date}\n        />\n        {formik.errors && <span>{errors.email}</span>}\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}